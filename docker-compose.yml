version: '3.8'

services:
  # Banco de dados MySQL
  mysql-db:
    image: mysql:8.0
    container_name: credentials-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ~/credentials/mysql-data:/var/lib/mysql
      - ~/credentials/mysql-init:/docker-entrypoint-initdb.d
    networks:
      - credentials-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Backend Spring Boot
  credentials-backend:
    build:
      context: ./credential-portals-service
      dockerfile: Dockerfile
    container_name: credentials-backend
    restart: unless-stopped
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/${MYSQL_DATABASE}?createDatabaseIfNotExist=true&useTimezone=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "false"
      SERVER_PORT: ${BACKEND_PORT}
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    volumes:
      - ~/credentials/backend-logs:/app/logs
    networks:
      - credentials-network
    depends_on:
      mysql-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${BACKEND_PORT}/actuator/health"]
      timeout: 30s
      retries: 5
      start_period: 60s

  # Frontend Angular com Nginx
  credentials-frontend:
    build:
      context: ./front-credentials
      dockerfile: Dockerfile
    container_name: credentials-frontend
    restart: unless-stopped
    environment:
      #API_BASE_URL: ${API_BASE_URL}
      NODE_ENV: production
    ports:
      - "${FRONTEND_PORT}:80"
    volumes:
      - ~/credentials/nginx-logs:/var/log/nginx
    networks:
      - credentials-network
    depends_on:
      - credentials-backend
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      timeout: 10s
      retries: 3

networks:
  credentials-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
  backend-logs:
    driver: local
  nginx-logs:
    driver: local