#!/bin/bash

# Script de monitoramento para Credentials Full Stack
# Execute este script para verificar o status dos servi√ßos

PROJECT_NAME="credentials-fullstack"
BACKEND_PORT="11003"
FRONTEND_PORT="11080"

echo "üîç Monitoramento - Credentials Full Stack"
echo "========================================"
echo "Data/Hora: $(date)"
echo ""

# Verificar se Docker est√° rodando
echo "üê≥ Status do Docker:"
if systemctl is-active --quiet docker; then
    echo "‚úÖ Docker est√° rodando"
else
    echo "‚ùå Docker n√£o est√° rodando"
    exit 1
fi
echo ""

# Status dos containers
echo "üì¶ Status dos Containers:"
docker-compose -p $PROJECT_NAME ps
echo ""

# Verificar sa√∫de dos servi√ßos
echo "üè• Health Checks:"

# MySQL
echo "üóÑÔ∏è  MySQL:"
if docker-compose -p $PROJECT_NAME exec -T mysql-db mysqladmin ping -h localhost --silent; then
    echo "‚úÖ MySQL est√° respondendo"
else
    echo "‚ùå MySQL n√£o est√° respondendo"
fi

# Backend
echo "üîß Backend:"
if curl -f -s http://localhost:$BACKEND_PORT/actuator/health > /dev/null; then
    echo "‚úÖ Backend est√° respondendo"
    echo "   Health: $(curl -s http://localhost:$BACKEND_PORT/actuator/health | jq -r '.status' 2>/dev/null || echo 'OK')"
else
    echo "‚ùå Backend n√£o est√° respondendo"
fi

# Frontend
echo "üåê Frontend:"
if curl -f -s http://localhost:$FRONTEND_PORT/ > /dev/null; then
    echo "‚úÖ Frontend est√° respondendo"
else
    echo "‚ùå Frontend n√£o est√° respondendo"
fi
echo ""

# Uso de recursos
echo "üíæ Uso de Recursos:"
echo "Mem√≥ria:"
free -h | head -2
echo ""
echo "Disco:"
df -h | grep -E '(Filesystem|/$|/var|/home)'
echo ""

# Logs recentes (√∫ltimas 10 linhas)
echo "üìã Logs Recentes (√∫ltimas 10 linhas):"
echo ""
echo "=== MySQL ==="
docker-compose -p $PROJECT_NAME logs --tail=10 mysql-db 2>/dev/null || echo "Container n√£o encontrado"
echo ""
echo "=== Backend ==="
docker-compose -p $PROJECT_NAME logs --tail=10 credentials-backend 2>/dev/null || echo "Container n√£o encontrado"
echo ""
echo "=== Frontend ==="
docker-compose -p $PROJECT_NAME logs --tail=10 credentials-frontend 2>/dev/null || echo "Container n√£o encontrado"
echo ""

# Resumo
echo "üìä Resumo:"
containers_running=$(docker-compose -p $PROJECT_NAME ps --services --filter status=running | wc -l)
total_containers=$(docker-compose -p $PROJECT_NAME ps --services | wc -l)

if [ $containers_running -eq $total_containers ] && [ $total_containers -gt 0 ]; then
    echo "‚úÖ Todos os servi√ßos est√£o rodando ($containers_running/$total_containers)"
    echo ""
    echo "üåê Acessos:"
    echo "   Frontend: http://$(hostname -I | awk '{print $1}'):$FRONTEND_PORT"
    echo "   Backend:  http://$(hostname -I | awk '{print $1}'):$BACKEND_PORT"
    echo "   Swagger:  http://$(hostname -I | awk '{print $1}'):$BACKEND_PORT/swagger-ui.html"
else
    echo "‚ö†Ô∏è  Alguns servi√ßos podem n√£o estar rodando ($containers_running/$total_containers)"
fi

echo ""
echo "üîß Comandos √∫teis:"
echo "   Parar todos: docker-compose -p $PROJECT_NAME down"
echo "   Iniciar todos: docker-compose -p $PROJECT_NAME up -d"
echo "   Ver logs: docker-compose -p $PROJECT_NAME logs -f [service]"
echo "   Rebuild: docker-compose -p $PROJECT_NAME up -d --build"
