#!/bin/bash

# Script de configura√ß√£o inicial para Jenkins
# Execute este script no seu servidor Linux para preparar o ambiente

echo "üöÄ Configurando ambiente para Jenkins - Credentials Full Stack"
echo "============================================================="

# Verificar se o usu√°rio √© root ou tem sudo
if [ "$EUID" -ne 0 ] && ! sudo -n true 2>/dev/null; then
    echo "‚ùå Este script precisa ser executado como root ou o usu√°rio precisa ter permiss√µes sudo"
    exit 1
fi

# Fun√ß√£o para executar comandos com sudo se necess√°rio
run_cmd() {
    if [ "$EUID" -eq 0 ]; then
        "$@"
    else
        sudo "$@"
    fi
}

# 1. Instalar Docker (se n√£o estiver instalado)
echo "üê≥ Verificando Docker..."
if ! command -v docker &> /dev/null; then
    echo "Instalando Docker..."
    curl -fsSL https://get.docker.com -o get-docker.sh
    run_cmd sh get-docker.sh
    run_cmd usermod -aG docker jenkins
    run_cmd usermod -aG docker $USER
    echo "‚úÖ Docker instalado com sucesso!"
else
    echo "‚úÖ Docker j√° est√° instalado"
fi

# 2. Instalar Docker Compose (se n√£o estiver instalado)
echo "üîß Verificando Docker Compose..."
if ! command -v docker-compose &> /dev/null; then
    echo "Instalando Docker Compose..."
    run_cmd curl -L "https://github.com/docker/compose/releases/download/v2.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    run_cmd chmod +x /usr/local/bin/docker-compose
    echo "‚úÖ Docker Compose instalado com sucesso!"
else
    echo "‚úÖ Docker Compose j√° est√° instalado"
fi

# 3. Configurar usu√°rio jenkins no grupo docker
echo "üë§ Configurando permiss√µes do usu√°rio jenkins..."
run_cmd usermod -aG docker jenkins

# 4. Criar diret√≥rios necess√°rios
echo "üìÅ Criando diret√≥rios necess√°rios..."
run_cmd mkdir -p /home/jenkins/credentials/{mysql-data,mysql-init,backend-logs,nginx-conf,nginx-logs}
run_cmd chown -R jenkins:jenkins /home/jenkins/credentials
run_cmd chmod -R 755 /home/jenkins/credentials
run_cmd chmod -R 777 /home/jenkins/credentials/mysql-data

# 5. Configurar firewall (se UFW estiver ativo)
echo "üî• Configurando firewall..."
if command -v ufw &> /dev/null && ufw status | grep -q "Status: active"; then
    echo "Configurando regras do UFW..."
    run_cmd ufw allow 11003/tcp comment "Credentials Backend"
    run_cmd ufw allow 11080/tcp comment "Credentials Frontend"
    echo "‚úÖ Firewall configurado"
else
    echo "‚ÑπÔ∏è  UFW n√£o est√° ativo ou n√£o est√° instalado"
fi

# 6. Verificar se Jenkins est√° rodando
echo "üîç Verificando Jenkins..."
if systemctl is-active --quiet jenkins; then
    echo "‚úÖ Jenkins est√° rodando"
    echo "Reiniciando Jenkins para aplicar mudan√ßas de grupo..."
    run_cmd systemctl restart jenkins
else
    echo "‚ùå Jenkins n√£o est√° rodando ou n√£o est√° instalado"
    echo "Para instalar Jenkins, visite: https://www.jenkins.io/doc/book/installing/linux/"
fi

# 7. Teste final
echo "üß™ Testando configura√ß√£o..."
docker --version
docker-compose --version

echo ""
echo "‚úÖ Configura√ß√£o conclu√≠da!"
echo ""
echo "üìã Pr√≥ximos passos:"
echo "1. Acesse o Jenkins: http://YOUR_SERVER_IP:8080"
echo "2. Configure as credenciais no Jenkins:"
echo "   - mysql-root-password"
echo "   - mysql-user-password"
echo "3. Crie um novo Pipeline Job"
echo "4. Configure o SCM para: https://github.com/ricbatera/credentials-fullstack.git"
echo "5. Execute o pipeline!"
echo ""
echo "üåê Ap√≥s o deploy, sua aplica√ß√£o estar√° dispon√≠vel em:"
echo "   Frontend: http://YOUR_SERVER_IP:11080"
echo "   Backend:  http://YOUR_SERVER_IP:11003"
echo "   Swagger:  http://YOUR_SERVER_IP:11003/swagger-ui.html"
